/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package krcho.fbi.gui.dialogy;

import java.awt.Dialog;
import java.util.List;
import krcho.fbi.databaza.dao.UrovenSposobilostiDao;
import krcho.fbi.databaza.tabulky.OpisUrovne;
import krcho.fbi.databaza.tabulky.Sposobilost;
import krcho.fbi.databaza.tabulky.UrovenSposobilosti;
import krcho.fbi.gui.TextAreaFilter;
import krcho.fbi.gui.TextAreaKeyAdapter;
import krcho.fbi.gui.tablemodel.OpisUrovneNoSQLModel;
import krcho.fbi.hibernate.HibernateUtilities;
import org.hibernate.Session;

/**
 *
 * @author Jozef Krcho
 */
public class VytvorUpravSposobilostDialog extends javax.swing.JDialog {

    /**
     * Creates new form VytvorUpravSposobilostDialog
     */
    private Sposobilost sposobilost;
    private boolean zmena;

    public VytvorUpravSposobilostDialog(java.awt.Frame parent, boolean modal, Sposobilost sposobilost) {
        super(parent, modal);
        initComponents();
        nastav(sposobilost);
    }

    public VytvorUpravSposobilostDialog(Dialog owner, boolean modal, Sposobilost sposobilost) {
        super(owner, modal);
        initComponents();
        nastav(sposobilost);
    }

    private void nastav(Sposobilost sposobilost) {
        this.setLocationRelativeTo(null);
        nazovTextArea.addKeyListener(new TextAreaKeyAdapter());
        nazovTextArea.setDocument(new TextAreaFilter(nazovTextArea, 100));
        this.sposobilost = sposobilost;
        this.zmena = false;
        nazovTextArea.setText(sposobilost.getNazov());
        pstCheckBox.setSelected(sposobilost.getPST());
        opisUrovneTable.setModel(new OpisUrovneNoSQLModel(sposobilost.getOpisyUrovni()));

        Session session = HibernateUtilities.getSessionFactory().openSession();
        UrovenSposobilostiDao urovenDao = new UrovenSposobilostiDao();
        urovenDao.setSession(session);
        List<UrovenSposobilosti> urovne = urovenDao.findAll();
        for (UrovenSposobilosti uroven : urovne) {
            urovenComboBox.addItem(uroven);
        }
        urovenComboBox.setSelectedItem(sposobilost.getUrovenSposobilosti());
        session.close();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nazovTextArea = new javax.swing.JTextArea();
        pstCheckBox = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        opisUrovneTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        pridajOpisButton = new javax.swing.JButton();
        vymazOpisButton = new javax.swing.JButton();
        upravOpisButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        uloztiButton = new javax.swing.JButton();
        zrusitButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        upravitUrovenButton = new javax.swing.JButton();
        urovenComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Spôsobilosť");
        setMinimumSize(new java.awt.Dimension(600, 400));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Názov:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("PST:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jLabel2, gridBagConstraints);

        nazovTextArea.setColumns(10);
        nazovTextArea.setRows(1);
        jScrollPane1.setViewportView(nazovTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        pstCheckBox.setText("vyžaduje overenie");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(pstCheckBox, gridBagConstraints);

        jScrollPane3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(200, 200));

        opisUrovneTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        opisUrovneTable.setMinimumSize(new java.awt.Dimension(150, 150));
        opisUrovneTable.setName(""); // NOI18N
        opisUrovneTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(opisUrovneTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jScrollPane3, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        pridajOpisButton.setText("Pridaj opis");
        pridajOpisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pridajOpisButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(pridajOpisButton, gridBagConstraints);

        vymazOpisButton.setText("Vymaž opis");
        vymazOpisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vymazOpisButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(vymazOpisButton, gridBagConstraints);

        upravOpisButton.setText("Uprav opis");
        upravOpisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upravOpisButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(upravOpisButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        uloztiButton.setText("Uložiť");
        uloztiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uloztiButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(uloztiButton, gridBagConstraints);

        zrusitButton.setText("Zrušiť");
        zrusitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zrusitButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(zrusitButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
        getContentPane().add(jPanel2, gridBagConstraints);

        jLabel3.setText("Spôsobilosť");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("Opis úrovne");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel6.setText("Úroveň:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jLabel6, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        upravitUrovenButton.setText("Upraviť");
        upravitUrovenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upravitUrovenButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(upravitUrovenButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(urovenComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void zrusitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zrusitButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_zrusitButtonActionPerformed

    private void uloztiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uloztiButtonActionPerformed
        this.sposobilost.setNazov(nazovTextArea.getText());
        this.sposobilost.setPST(pstCheckBox.isSelected());
        this.sposobilost.setUrovenSposobilosti((UrovenSposobilosti) urovenComboBox.getSelectedItem());
        
        this.zmena = true;
        this.dispose();
    }//GEN-LAST:event_uloztiButtonActionPerformed

    private void pridajOpisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pridajOpisButtonActionPerformed
        OpisUrovne opisUrovne = new OpisUrovne();
        VytvorUpravDialog dialog = new VytvorUpravDialog(this, true, opisUrovne, OpisUrovne.class);
        dialog.setVisible(true);
        if (dialog.isZmena()) {
            OpisUrovneNoSQLModel model = (OpisUrovneNoSQLModel) opisUrovneTable.getModel();
            model.vlozOpisUrovne(opisUrovne, sposobilost);
        }
    }//GEN-LAST:event_pridajOpisButtonActionPerformed

    private void upravOpisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upravOpisButtonActionPerformed
        int vybranyRiadok = opisUrovneTable.getSelectedRow();
        if (vybranyRiadok >= 0) {
            OpisUrovneNoSQLModel model = (OpisUrovneNoSQLModel) opisUrovneTable.getModel();
            OpisUrovne upravenyOpis = model.getOpisUrovne(vybranyRiadok);
            VytvorUpravDialog dialog = new VytvorUpravDialog(this, true, upravenyOpis, OpisUrovne.class);
            dialog.setVisible(true);
            if (dialog.isZmena()) {
                model.upravOpisUrovne(vybranyRiadok, upravenyOpis.getPopis());
            }
        }
    }//GEN-LAST:event_upravOpisButtonActionPerformed

    private void vymazOpisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vymazOpisButtonActionPerformed
        int vybranyRiadok = opisUrovneTable.getSelectedRow();
        if (vybranyRiadok >= 0) {
            OpisUrovneNoSQLModel model = (OpisUrovneNoSQLModel) opisUrovneTable.getModel();
            model.vymazOpisUrovne(vybranyRiadok);
        }
    }//GEN-LAST:event_vymazOpisButtonActionPerformed

    private void upravitUrovenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upravitUrovenButtonActionPerformed
        SpravcaTabulkyDialog dialog = new SpravcaTabulkyDialog(this, true, UrovenSposobilosti.class);
        dialog.setVisible(true);

        Session session = HibernateUtilities.getSessionFactory().openSession();
        UrovenSposobilostiDao urovenSposobilostiDao = new UrovenSposobilostiDao();
        urovenSposobilostiDao.setSession(session);
        List<UrovenSposobilosti> urovneSposobilosti = urovenSposobilostiDao.findAll();
        urovenComboBox.removeAllItems();
        for (UrovenSposobilosti uroven : urovneSposobilosti) {
            urovenComboBox.addItem(uroven);
        }
        session.close();
    }//GEN-LAST:event_upravitUrovenButtonActionPerformed

    public boolean isZmena() {
        return zmena;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea nazovTextArea;
    private javax.swing.JTable opisUrovneTable;
    private javax.swing.JButton pridajOpisButton;
    private javax.swing.JCheckBox pstCheckBox;
    private javax.swing.JButton uloztiButton;
    private javax.swing.JButton upravOpisButton;
    private javax.swing.JButton upravitUrovenButton;
    private javax.swing.JComboBox<UrovenSposobilosti> urovenComboBox;
    private javax.swing.JButton vymazOpisButton;
    private javax.swing.JButton zrusitButton;
    // End of variables declaration//GEN-END:variables
}
