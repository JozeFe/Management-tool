/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package krcho.fbi.gui;

import krcho.fbi.gui.dialogy.RizikaObjektuDialog;
import krcho.fbi.gui.dialogy.PridajOdoberPrvokDialog;
import krcho.fbi.gui.dialogy.HlavneInfoPozicieDialog;
import krcho.fbi.gui.dialogy.HlavneInfoObjektuDialog;
import krcho.fbi.databaza.tabulky.Isco;
import krcho.fbi.databaza.tabulky.OdbornaVedomost;
import krcho.fbi.databaza.tabulky.OdbornaZrucnost;
import krcho.fbi.databaza.tabulky.PopisCinnosti;
import krcho.fbi.databaza.tabulky.Sposobilost;
import krcho.fbi.databaza.tabulky.TypObjektu;
import krcho.fbi.gui.tablemodel.TypovaPoziciaModel;
import krcho.fbi.gui.tablemodel.PodrobnaCharakteristikaModel;
import krcho.fbi.databaza.tabulky.TypovaPozicia;
import krcho.fbi.gui.tablemodel.KlasifikaciaZamestnaniaModel;
import krcho.fbi.gui.tablemodel.PozadovaneSposobilostiModel;
import krcho.fbi.gui.tablemodel.PozadovaneVedomostiModel;
import krcho.fbi.gui.tablemodel.PozadovaneZrucnostiModel;
import krcho.fbi.gui.tablemodel.RizikaObjektuModel;
import krcho.fbi.gui.tablemodel.TypObjektuModel;

/**
 *
 * @author Jozef Krcho
 */
public class TypovaPoziciaGui extends javax.swing.JFrame {

    /**
     * Creates new form TypovaPoziciaGui
     */
    private static final int SIRKA_ID = 60;
    private TypovaPozicia vybranaPozicia;
    private TypObjektu vybranyObjekt;

    public TypovaPoziciaGui() {
        initComponents();
        this.setLocationRelativeTo(null);
        nastavInfoTypovejPozicie(null);
        nastavInfoTypuObjektu(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        typovaPoziciaPanel = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        hlavneInfPanel = new javax.swing.JPanel();
        nazovPozicieLabel = new javax.swing.JLabel();
        charakteristikaLabel = new javax.swing.JLabel();
        stupenVzdelaniaLabel = new javax.swing.JLabel();
        odbornaPraxLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        nazovPozicieTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        charakteristikaTextArea = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        stupenVzdelaniaTextArea = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        odbornaPraxTextArea = new javax.swing.JTextArea();
        upravitHlavneInfoButton = new javax.swing.JButton();
        certifikatLabel = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        certifikatTextArea = new javax.swing.JTextArea();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        podrobnaCharPanel = new javax.swing.JPanel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jScrollPane6 = new javax.swing.JScrollPane();
        podrobnaCharTable = new javax.swing.JTable();
        upravPodrobnuCharButton = new javax.swing.JButton();
        iscoPanel = new javax.swing.JPanel();
        upravKlasifikaciuZamestnaniButton = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        klasifikaciaZamestnaniaTable = new javax.swing.JTable();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        zrucnostiPanel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        pozadovaneZrucnostiTable = new javax.swing.JTable();
        upravZrucnostiButton = new javax.swing.JButton();
        vedomostiPanel = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        pozadovaneVedomostiTable = new javax.swing.JTable();
        upravVedomostiButton = new javax.swing.JButton();
        sposobilostiPanel = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        pozadovaneSposobilostiTable = new javax.swing.JTable();
        upravSposobilostiButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        zobrazitButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        typovaPoziciaJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        vymazPoziciuButton = new javax.swing.JButton();
        vytvorPoziciuButton = new javax.swing.JButton();
        typObjektuPanel = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        nazovObjektuLabel = new javax.swing.JLabel();
        popisObjektuLabel = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        nazovObjektuTextArea = new javax.swing.JTextArea();
        jScrollPane14 = new javax.swing.JScrollPane();
        popisObjektuTextArea = new javax.swing.JTextArea();
        upravitTypObjektuButton = new javax.swing.JButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jPanel3 = new javax.swing.JPanel();
        upravRizikaButton = new javax.swing.JButton();
        jScrollPane16 = new javax.swing.JScrollPane();
        rizikaObjektuTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        vytvorTypObjektuButton = new javax.swing.JButton();
        zobrazTypObjektuButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        typObjektuTable = new javax.swing.JTable();
        vymazTypObjektuButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Nástroj pre správu číselníkov FBI");
        setMinimumSize(new java.awt.Dimension(700, 515));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        typovaPoziciaPanel.setLayout(new java.awt.GridBagLayout());

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        hlavneInfPanel.setLayout(new java.awt.GridBagLayout());

        nazovPozicieLabel.setText("Názov pozície:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        hlavneInfPanel.add(nazovPozicieLabel, gridBagConstraints);

        charakteristikaLabel.setText("Charakteristika:");
        charakteristikaLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        hlavneInfPanel.add(charakteristikaLabel, gridBagConstraints);

        stupenVzdelaniaLabel.setText("Stupeň vzdelania:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        hlavneInfPanel.add(stupenVzdelaniaLabel, gridBagConstraints);

        odbornaPraxLabel.setText("Odborná prax:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        hlavneInfPanel.add(odbornaPraxLabel, gridBagConstraints);

        nazovPozicieTextArea.setEditable(false);
        nazovPozicieTextArea.setBackground(new java.awt.Color(230, 230, 230));
        nazovPozicieTextArea.setColumns(8);
        nazovPozicieTextArea.setLineWrap(true);
        nazovPozicieTextArea.setRows(1);
        nazovPozicieTextArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(nazovPozicieTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        hlavneInfPanel.add(jScrollPane2, gridBagConstraints);

        charakteristikaTextArea.setEditable(false);
        charakteristikaTextArea.setBackground(new java.awt.Color(230, 230, 230));
        charakteristikaTextArea.setColumns(8);
        charakteristikaTextArea.setLineWrap(true);
        charakteristikaTextArea.setRows(6);
        charakteristikaTextArea.setWrapStyleWord(true);
        jScrollPane3.setViewportView(charakteristikaTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        hlavneInfPanel.add(jScrollPane3, gridBagConstraints);

        stupenVzdelaniaTextArea.setEditable(false);
        stupenVzdelaniaTextArea.setBackground(new java.awt.Color(230, 230, 230));
        stupenVzdelaniaTextArea.setColumns(8);
        stupenVzdelaniaTextArea.setRows(1);
        jScrollPane4.setViewportView(stupenVzdelaniaTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        hlavneInfPanel.add(jScrollPane4, gridBagConstraints);

        odbornaPraxTextArea.setEditable(false);
        odbornaPraxTextArea.setBackground(new java.awt.Color(230, 230, 230));
        odbornaPraxTextArea.setColumns(8);
        odbornaPraxTextArea.setRows(1);
        jScrollPane5.setViewportView(odbornaPraxTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        hlavneInfPanel.add(jScrollPane5, gridBagConstraints);

        upravitHlavneInfoButton.setText("Uprav hlavné informácie pozície");
        upravitHlavneInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upravitHlavneInfoButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        hlavneInfPanel.add(upravitHlavneInfoButton, gridBagConstraints);

        certifikatLabel.setText("Certifikát:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        hlavneInfPanel.add(certifikatLabel, gridBagConstraints);

        certifikatTextArea.setEditable(false);
        certifikatTextArea.setBackground(new java.awt.Color(230, 230, 230));
        certifikatTextArea.setColumns(8);
        certifikatTextArea.setRows(1);
        jScrollPane8.setViewportView(certifikatTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        hlavneInfPanel.add(jScrollPane8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        hlavneInfPanel.add(filler1, gridBagConstraints);

        jTabbedPane2.addTab("Hlavné Info.", hlavneInfPanel);

        podrobnaCharPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        podrobnaCharPanel.add(filler2, gridBagConstraints);

        podrobnaCharTable.setAutoCreateRowSorter(true);
        podrobnaCharTable.setModel(new PodrobnaCharakteristikaModel());
        podrobnaCharTable.setAutoscrolls(false);
        podrobnaCharTable.setMinimumSize(new java.awt.Dimension(250, 250));
        podrobnaCharTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        podrobnaCharTable.setShowVerticalLines(false);
        jScrollPane6.setViewportView(podrobnaCharTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        podrobnaCharPanel.add(jScrollPane6, gridBagConstraints);

        upravPodrobnuCharButton.setText("Uprav charakteristiku pozície");
        upravPodrobnuCharButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upravPodrobnuCharButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        podrobnaCharPanel.add(upravPodrobnuCharButton, gridBagConstraints);

        jTabbedPane2.addTab("Podrobná char.", podrobnaCharPanel);

        iscoPanel.setLayout(new java.awt.GridBagLayout());

        upravKlasifikaciuZamestnaniButton.setText("Uprav klasifikáciu zamestnaní");
        upravKlasifikaciuZamestnaniButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upravKlasifikaciuZamestnaniButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        iscoPanel.add(upravKlasifikaciuZamestnaniButton, gridBagConstraints);

        klasifikaciaZamestnaniaTable.setAutoCreateRowSorter(true);
        klasifikaciaZamestnaniaTable.setModel(new KlasifikaciaZamestnaniaModel());
        jScrollPane10.setViewportView(klasifikaciaZamestnaniaTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        iscoPanel.add(jScrollPane10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 3;
        iscoPanel.add(filler3, gridBagConstraints);

        jTabbedPane2.addTab("ISCO", iscoPanel);

        zrucnostiPanel.setLayout(new java.awt.GridBagLayout());

        pozadovaneZrucnostiTable.setAutoCreateRowSorter(true);
        pozadovaneZrucnostiTable.setModel(new PozadovaneZrucnostiModel());
        jScrollPane7.setViewportView(pozadovaneZrucnostiTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        zrucnostiPanel.add(jScrollPane7, gridBagConstraints);

        upravZrucnostiButton.setText("Uprav Zručnosti");
        upravZrucnostiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upravZrucnostiButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        zrucnostiPanel.add(upravZrucnostiButton, gridBagConstraints);

        jTabbedPane2.addTab("Zručnosti", zrucnostiPanel);

        vedomostiPanel.setLayout(new java.awt.GridBagLayout());

        pozadovaneVedomostiTable.setAutoCreateRowSorter(true);
        pozadovaneVedomostiTable.setModel(new PozadovaneVedomostiModel());
        jScrollPane12.setViewportView(pozadovaneVedomostiTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vedomostiPanel.add(jScrollPane12, gridBagConstraints);

        upravVedomostiButton.setText("Uprav Vedomosti");
        upravVedomostiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upravVedomostiButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vedomostiPanel.add(upravVedomostiButton, gridBagConstraints);

        jTabbedPane2.addTab("Vedomosti", vedomostiPanel);

        sposobilostiPanel.setLayout(new java.awt.GridBagLayout());

        pozadovaneSposobilostiTable.setAutoCreateRowSorter(true);
        pozadovaneSposobilostiTable.setModel(new PozadovaneSposobilostiModel());
        jScrollPane11.setViewportView(pozadovaneSposobilostiTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sposobilostiPanel.add(jScrollPane11, gridBagConstraints);

        upravSposobilostiButton.setText("Uprav Spôsobilosti");
        upravSposobilostiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upravSposobilostiButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sposobilostiPanel.add(upravSposobilostiButton, gridBagConstraints);

        jTabbedPane2.addTab("Spôsobilosti", sposobilostiPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        typovaPoziciaPanel.add(jTabbedPane2, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        zobrazitButton.setText("Zobraz pozíciu");
        zobrazitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zobrazitButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(zobrazitButton, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(150, 150));

        typovaPoziciaJTable.setAutoCreateRowSorter(true);
        typovaPoziciaJTable.setModel(new TypovaPoziciaModel());
        typovaPoziciaJTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        typovaPoziciaJTable.setMinimumSize(new java.awt.Dimension(150, 150));
        typovaPoziciaJTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(typovaPoziciaJTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Typové pozície:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel1, gridBagConstraints);

        vymazPoziciuButton.setText("Vymaž pozíciu");
        vymazPoziciuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vymazPoziciuButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(vymazPoziciuButton, gridBagConstraints);

        vytvorPoziciuButton.setText("Vytvor pozíciu");
        vytvorPoziciuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vytvorPoziciuButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(vytvorPoziciuButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        typovaPoziciaPanel.add(jPanel2, gridBagConstraints);

        jTabbedPane1.addTab("Typová pozícia", typovaPoziciaPanel);

        typObjektuPanel.setLayout(new java.awt.GridBagLayout());

        jTabbedPane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        nazovObjektuLabel.setText("Názov:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(nazovObjektuLabel, gridBagConstraints);

        popisObjektuLabel.setText("Popis objektu:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(popisObjektuLabel, gridBagConstraints);

        nazovObjektuTextArea.setEditable(false);
        nazovObjektuTextArea.setBackground(new java.awt.Color(230, 230, 230));
        nazovObjektuTextArea.setColumns(4);
        nazovObjektuTextArea.setLineWrap(true);
        nazovObjektuTextArea.setRows(1);
        nazovObjektuTextArea.setWrapStyleWord(true);
        jScrollPane9.setViewportView(nazovObjektuTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jScrollPane9, gridBagConstraints);

        popisObjektuTextArea.setEditable(false);
        popisObjektuTextArea.setBackground(new java.awt.Color(230, 230, 230));
        popisObjektuTextArea.setColumns(4);
        popisObjektuTextArea.setLineWrap(true);
        popisObjektuTextArea.setRows(6);
        popisObjektuTextArea.setWrapStyleWord(true);
        jScrollPane14.setViewportView(popisObjektuTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jScrollPane14, gridBagConstraints);

        upravitTypObjektuButton.setText("Uprav hlavné informácie objektu");
        upravitTypObjektuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upravitTypObjektuButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(upravitTypObjektuButton, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(filler4, gridBagConstraints);

        jTabbedPane3.addTab("Hlavné Info.", jPanel1);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        upravRizikaButton.setText("Uprav riziká objektu");
        upravRizikaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upravRizikaButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(upravRizikaButton, gridBagConstraints);

        jScrollPane16.setPreferredSize(new java.awt.Dimension(100, 100));

        rizikaObjektuTable.setModel(new RizikaObjektuModel());
        jScrollPane16.setViewportView(rizikaObjektuTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane16, gridBagConstraints);

        jTabbedPane3.addTab("Riziká objektu", jPanel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        typObjektuPanel.add(jTabbedPane3, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setMinimumSize(new java.awt.Dimension(405, 94));
        jPanel4.setName(""); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(405, 221));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        vytvorTypObjektuButton.setText("Vytvor typ objektu");
        vytvorTypObjektuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vytvorTypObjektuButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(vytvorTypObjektuButton, gridBagConstraints);

        zobrazTypObjektuButton.setText("Zobraz typ objektu");
        zobrazTypObjektuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zobrazTypObjektuButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(zobrazTypObjektuButton, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Typy Objektu:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jLabel2, gridBagConstraints);

        jScrollPane15.setPreferredSize(new java.awt.Dimension(150, 150));

        typObjektuTable.setModel(new TypObjektuModel());
        typObjektuTable.setMinimumSize(new java.awt.Dimension(150, 150));
        typObjektuTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane15.setViewportView(typObjektuTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jScrollPane15, gridBagConstraints);

        vymazTypObjektuButton.setText("Vymaž typ objektu");
        vymazTypObjektuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vymazTypObjektuButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(vymazTypObjektuButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        typObjektuPanel.add(jPanel4, gridBagConstraints);

        jTabbedPane1.addTab("Typ objektu", typObjektuPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void zobrazitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zobrazitButtonActionPerformed
        int vybranyRiadok = typovaPoziciaJTable.getSelectedRow();
        if (vybranyRiadok >= 0) {
            vybranyRiadok = typovaPoziciaJTable.convertRowIndexToModel(vybranyRiadok);
            TypovaPoziciaModel model = (TypovaPoziciaModel) typovaPoziciaJTable.getModel();
            vybranaPozicia = model.getPozicia(vybranyRiadok);

            nastavInfoTypovejPozicie(vybranaPozicia);
        }
    }//GEN-LAST:event_zobrazitButtonActionPerformed

    private void upravPodrobnuCharButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upravPodrobnuCharButtonActionPerformed
        if (vybranaPozicia != null) {
            new PridajOdoberPrvokDialog(this, true, vybranaPozicia.getPoziciaId(), PopisCinnosti.class).setVisible(true);
            podrobnaCharTable.setModel(new PodrobnaCharakteristikaModel(vybranaPozicia.getPoziciaId()));
            podrobnaCharTable.getColumn("Id").setMaxWidth(SIRKA_ID);
        }
    }//GEN-LAST:event_upravPodrobnuCharButtonActionPerformed

    private void upravitHlavneInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upravitHlavneInfoButtonActionPerformed
        if (vybranaPozicia != null) {
            HlavneInfoPozicieDialog hlavneInf = new HlavneInfoPozicieDialog(this, true, vybranaPozicia);
            hlavneInf.setVisible(true);
            if (hlavneInf.getZmena() == true) {
                int vybranyRiadok = typovaPoziciaJTable.getSelectedRow();
                TypovaPoziciaModel model = new TypovaPoziciaModel();
                typovaPoziciaJTable.setModel(model);
                typovaPoziciaJTable.getColumn("Id").setMaxWidth(SIRKA_ID);
                nastavInfoTypovejPozicie(vybranaPozicia);
            }
        }
    }//GEN-LAST:event_upravitHlavneInfoButtonActionPerformed

    private void upravZrucnostiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upravZrucnostiButtonActionPerformed
        if (vybranaPozicia != null) {
            new PridajOdoberPrvokDialog(this, true, vybranaPozicia.getPoziciaId(), OdbornaZrucnost.class).setVisible(true);
            pozadovaneZrucnostiTable.setModel(new PozadovaneZrucnostiModel(vybranaPozicia.getPoziciaId()));
            pozadovaneZrucnostiTable.getColumn("Id").setMaxWidth(SIRKA_ID);
        }
    }//GEN-LAST:event_upravZrucnostiButtonActionPerformed

    private void vytvorPoziciuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vytvorPoziciuButtonActionPerformed
        TypovaPozicia novaPozicia = new TypovaPozicia("", "");
        HlavneInfoPozicieDialog hlavneInf = new HlavneInfoPozicieDialog(this, true, novaPozicia);
        hlavneInf.setVisible(true);
        if (hlavneInf.getZmena() == true) {
            TypovaPoziciaModel model = new TypovaPoziciaModel();
            typovaPoziciaJTable.setModel(model);
            typovaPoziciaJTable.getColumn("Id").setMaxWidth(SIRKA_ID);
            vybranaPozicia = novaPozicia;

            nastavInfoTypovejPozicie(vybranaPozicia);
        }
    }//GEN-LAST:event_vytvorPoziciuButtonActionPerformed

    private void vymazPoziciuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vymazPoziciuButtonActionPerformed
        int vybranyRiadok = typovaPoziciaJTable.getSelectedRow();
        if (vybranyRiadok >= 0) {
            vybranyRiadok = typovaPoziciaJTable.convertRowIndexToModel(vybranyRiadok);
            TypovaPoziciaModel model = (TypovaPoziciaModel) typovaPoziciaJTable.getModel();
            nastavInfoTypovejPozicie(null);
            vybranaPozicia = null;
            model.vymazPoziciu(vybranyRiadok);
        }
    }//GEN-LAST:event_vymazPoziciuButtonActionPerformed

    private void upravKlasifikaciuZamestnaniButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upravKlasifikaciuZamestnaniButtonActionPerformed
        if (vybranaPozicia != null) {
            new PridajOdoberPrvokDialog(this, true, vybranaPozicia.getPoziciaId(), Isco.class).setVisible(true);
            klasifikaciaZamestnaniaTable.setModel(new KlasifikaciaZamestnaniaModel(vybranaPozicia.getPoziciaId()));
            klasifikaciaZamestnaniaTable.getColumn("Kod").setMaxWidth(SIRKA_ID);
        }
    }//GEN-LAST:event_upravKlasifikaciuZamestnaniButtonActionPerformed

    private void upravVedomostiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upravVedomostiButtonActionPerformed
        if (vybranaPozicia != null) {
            new PridajOdoberPrvokDialog(this, true, vybranaPozicia.getPoziciaId(), OdbornaVedomost.class).setVisible(true);
            pozadovaneVedomostiTable.setModel(new PozadovaneVedomostiModel(vybranaPozicia.getPoziciaId()));
            pozadovaneVedomostiTable.getColumn("Id").setMaxWidth(SIRKA_ID);
        }
    }//GEN-LAST:event_upravVedomostiButtonActionPerformed

    private void upravSposobilostiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upravSposobilostiButtonActionPerformed
        if (vybranaPozicia != null) {
            new PridajOdoberPrvokDialog(this, true, vybranaPozicia.getPoziciaId(), Sposobilost.class).setVisible(true);
            pozadovaneSposobilostiTable.setModel(new PozadovaneSposobilostiModel(vybranaPozicia.getPoziciaId()));
            pozadovaneSposobilostiTable.getColumn("Id").setMaxWidth(SIRKA_ID);
        }
    }//GEN-LAST:event_upravSposobilostiButtonActionPerformed

    private void upravitTypObjektuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upravitTypObjektuButtonActionPerformed
        if (vybranyObjekt != null) {
            HlavneInfoObjektuDialog hlavneInfoDialog = new HlavneInfoObjektuDialog(this, true, vybranyObjekt);
            hlavneInfoDialog.setVisible(true);
            if (hlavneInfoDialog.isZmena()) {
                TypObjektuModel typObjektuModel = (TypObjektuModel) typObjektuTable.getModel();
                typObjektuModel.upravTypObjektu(vybranyObjekt.getObjektId(), vybranyObjekt.getNazov(), vybranyObjekt.getPopis());

                nastavInfoTypuObjektu(vybranyObjekt);
            }
        }
    }//GEN-LAST:event_upravitTypObjektuButtonActionPerformed

    private void vytvorTypObjektuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vytvorTypObjektuButtonActionPerformed
        TypObjektu novyTypObjektu = new TypObjektu();
        HlavneInfoObjektuDialog hlavneInfodialog = new HlavneInfoObjektuDialog(this, true, novyTypObjektu);
        hlavneInfodialog.setVisible(true);
        if (hlavneInfodialog.isZmena()) {
            TypObjektuModel typObjektuModel = (TypObjektuModel) typObjektuTable.getModel();
            typObjektuModel.vlozTypObjektu(novyTypObjektu);

            vybranyObjekt = novyTypObjektu;
            nastavInfoTypuObjektu(novyTypObjektu);
        }
    }//GEN-LAST:event_vytvorTypObjektuButtonActionPerformed

    private void zobrazTypObjektuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zobrazTypObjektuButtonActionPerformed
        int vybranyRiadok = typObjektuTable.getSelectedRow();
        if (vybranyRiadok >= 0) {
            TypObjektuModel model = (TypObjektuModel) typObjektuTable.getModel();
            vybranyObjekt = model.getTypObjektu(vybranyRiadok);

            nastavInfoTypuObjektu(vybranyObjekt);
        }
    }//GEN-LAST:event_zobrazTypObjektuButtonActionPerformed

    private void vymazTypObjektuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vymazTypObjektuButtonActionPerformed
        int vybranyRiadok = typObjektuTable.getSelectedRow();
        if (vybranyRiadok >= 0) {
            TypObjektuModel model = (TypObjektuModel) typObjektuTable.getModel();
            vybranyObjekt = null;
            nastavInfoTypuObjektu(null);

            vybranyRiadok = typObjektuTable.convertRowIndexToModel(vybranyRiadok);
            model.vymazTypObjektu(vybranyRiadok);
            typObjektuTable.setModel(new TypObjektuModel());
            typObjektuTable.getColumn("Id").setMaxWidth(SIRKA_ID);
        }
    }//GEN-LAST:event_vymazTypObjektuButtonActionPerformed

    private void upravRizikaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upravRizikaButtonActionPerformed
        if (vybranyObjekt != null) {
            new RizikaObjektuDialog(this, true, vybranyObjekt).setVisible(true);
            rizikaObjektuTable.setModel(new RizikaObjektuModel(vybranyObjekt.getObjektId()));
            rizikaObjektuTable.getColumn("Id").setMaxWidth(SIRKA_ID);
        }
    }//GEN-LAST:event_upravRizikaButtonActionPerformed

    private void nastavInfoTypovejPozicie(TypovaPozicia pozicia) {
        if (pozicia == null) {
            nazovPozicieTextArea.setText("");
            charakteristikaTextArea.setText("");
            stupenVzdelaniaTextArea.setText("");
            odbornaPraxTextArea.setText("");
            certifikatTextArea.setText("");
            typovaPoziciaJTable.getColumn("Id").setMaxWidth(SIRKA_ID);
            podrobnaCharTable.setModel(new PodrobnaCharakteristikaModel());
            podrobnaCharTable.getColumn("Id").setMaxWidth(SIRKA_ID);
            klasifikaciaZamestnaniaTable.setModel(new KlasifikaciaZamestnaniaModel());
            klasifikaciaZamestnaniaTable.getColumn("Kod").setMaxWidth(SIRKA_ID);
            pozadovaneZrucnostiTable.setModel(new PozadovaneZrucnostiModel());
            pozadovaneZrucnostiTable.getColumn("Id").setMaxWidth(SIRKA_ID);
            pozadovaneVedomostiTable.setModel(new PozadovaneVedomostiModel());
            pozadovaneVedomostiTable.getColumn("Id").setMaxWidth(SIRKA_ID);
            pozadovaneSposobilostiTable.setModel(new PozadovaneSposobilostiModel());
            pozadovaneSposobilostiTable.getColumn("Id").setMaxWidth(SIRKA_ID);
        } else {
            nazovPozicieTextArea.setText(pozicia.getNazov());
            charakteristikaTextArea.setText(pozicia.getCharakteristika());
            if (pozicia.getStupenVzdelania() != null) {
                stupenVzdelaniaTextArea.setText(pozicia.getStupenVzdelania().toString());
            } else {
                stupenVzdelaniaTextArea.setText("");
            }
            if (pozicia.getOdbornaPrax() != null) {
                odbornaPraxTextArea.setText(pozicia.getOdbornaPrax().toString());
            } else {
                odbornaPraxTextArea.setText("");
            }
            if (pozicia.getCertifikat() != null) {
                certifikatTextArea.setText(pozicia.getCertifikat().toString());
            } else {
                certifikatTextArea.setText("");
            }
            podrobnaCharTable.setModel(new PodrobnaCharakteristikaModel(pozicia.getPoziciaId()));
            podrobnaCharTable.getColumn("Id").setMaxWidth(SIRKA_ID);
            klasifikaciaZamestnaniaTable.setModel(new KlasifikaciaZamestnaniaModel(pozicia.getPoziciaId()));
            klasifikaciaZamestnaniaTable.getColumn("Kod").setMaxWidth(SIRKA_ID);
            pozadovaneZrucnostiTable.setModel(new PozadovaneZrucnostiModel(pozicia.getPoziciaId()));
            pozadovaneZrucnostiTable.getColumn("Id").setMaxWidth(SIRKA_ID);
            pozadovaneVedomostiTable.setModel(new PozadovaneVedomostiModel(pozicia.getPoziciaId()));
            pozadovaneVedomostiTable.getColumn("Id").setMaxWidth(SIRKA_ID);
            pozadovaneSposobilostiTable.setModel(new PozadovaneSposobilostiModel(pozicia.getPoziciaId()));
            pozadovaneSposobilostiTable.getColumn("Id").setMaxWidth(SIRKA_ID);
        }

    }

    private void nastavInfoTypuObjektu(TypObjektu typObjektu) {
        if (typObjektu == null) {
            nazovObjektuTextArea.setText("");
            popisObjektuTextArea.setText("");
            typObjektuTable.getColumn("Id").setMaxWidth(SIRKA_ID);
            rizikaObjektuTable.setModel(new RizikaObjektuModel());
            rizikaObjektuTable.getColumn("Id").setMaxWidth(SIRKA_ID);
        } else {
            nazovObjektuTextArea.setText(vybranyObjekt.getNazov());
            popisObjektuTextArea.setText(vybranyObjekt.getPopis());
            rizikaObjektuTable.setModel(new RizikaObjektuModel(typObjektu.getObjektId()));
            rizikaObjektuTable.getColumn("Id").setMaxWidth(SIRKA_ID);
        }
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel certifikatLabel;
    private javax.swing.JTextArea certifikatTextArea;
    private javax.swing.JLabel charakteristikaLabel;
    private javax.swing.JTextArea charakteristikaTextArea;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JPanel hlavneInfPanel;
    private javax.swing.JPanel iscoPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable klasifikaciaZamestnaniaTable;
    private javax.swing.JLabel nazovObjektuLabel;
    private javax.swing.JTextArea nazovObjektuTextArea;
    private javax.swing.JLabel nazovPozicieLabel;
    private javax.swing.JTextArea nazovPozicieTextArea;
    private javax.swing.JLabel odbornaPraxLabel;
    private javax.swing.JTextArea odbornaPraxTextArea;
    private javax.swing.JPanel podrobnaCharPanel;
    private javax.swing.JTable podrobnaCharTable;
    private javax.swing.JLabel popisObjektuLabel;
    private javax.swing.JTextArea popisObjektuTextArea;
    private javax.swing.JTable pozadovaneSposobilostiTable;
    private javax.swing.JTable pozadovaneVedomostiTable;
    private javax.swing.JTable pozadovaneZrucnostiTable;
    private javax.swing.JTable rizikaObjektuTable;
    private javax.swing.JPanel sposobilostiPanel;
    private javax.swing.JLabel stupenVzdelaniaLabel;
    private javax.swing.JTextArea stupenVzdelaniaTextArea;
    private javax.swing.JPanel typObjektuPanel;
    private javax.swing.JTable typObjektuTable;
    private javax.swing.JTable typovaPoziciaJTable;
    private javax.swing.JPanel typovaPoziciaPanel;
    private javax.swing.JButton upravKlasifikaciuZamestnaniButton;
    private javax.swing.JButton upravPodrobnuCharButton;
    private javax.swing.JButton upravRizikaButton;
    private javax.swing.JButton upravSposobilostiButton;
    private javax.swing.JButton upravVedomostiButton;
    private javax.swing.JButton upravZrucnostiButton;
    private javax.swing.JButton upravitHlavneInfoButton;
    private javax.swing.JButton upravitTypObjektuButton;
    private javax.swing.JPanel vedomostiPanel;
    private javax.swing.JButton vymazPoziciuButton;
    private javax.swing.JButton vymazTypObjektuButton;
    private javax.swing.JButton vytvorPoziciuButton;
    private javax.swing.JButton vytvorTypObjektuButton;
    private javax.swing.JButton zobrazTypObjektuButton;
    private javax.swing.JButton zobrazitButton;
    private javax.swing.JPanel zrucnostiPanel;
    // End of variables declaration//GEN-END:variables

}
